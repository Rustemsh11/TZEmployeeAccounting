// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositiories;

#nullable disable

namespace Presentation.Migrations
{
    [DbContext(typeof(EmployeeAccountingDbContext))]
    [Migration("20231021081507_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entity.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<int?>("BossId")
                        .HasColumnType("int");

                    b.Property<int?>("MainDepartmentid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecordState")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("BossId");

                    b.HasIndex("MainDepartmentid");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Entity.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecordState")
                        .HasColumnType("int");

                    b.Property<string>("TabelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Entity.Department", b =>
                {
                    b.HasOne("Entity.Employee", "Boss")
                        .WithMany("Departments")
                        .HasForeignKey("BossId");

                    b.HasOne("Entity.Department", "MainDepartment")
                        .WithMany("InverseMainDepartment")
                        .HasForeignKey("MainDepartmentid");

                    b.Navigation("Boss");

                    b.Navigation("MainDepartment");
                });

            modelBuilder.Entity("Entity.Employee", b =>
                {
                    b.HasOne("Entity.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Entity.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("InverseMainDepartment");
                });

            modelBuilder.Entity("Entity.Employee", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
